from datetime import date

from django import forms

from risk.models import MaDealsActionIdDetails, MA_Deals_Risk_Factors

BADGE_SUCCESS_CLASS = 'badge badge-default badge-success'
BAGDE_INFO_CLASS = 'badge badge-default badge-info'
BADGE_DARK_CLASS = 'badge badge-default badge-dark'
DATE_PICKER_CLASS = 'form-control'
FORM_CONTROL_CLASS = 'form-control input-lg'
MAX_ACTUAL_DATE = date.today().strftime('%Y-%m-%d')


class MaDealsRiskFactorsForm(forms.ModelForm):
    """
    Form for MA Deals Risk Factors
    """
    class Meta:
        model = MA_Deals_Risk_Factors
        fields = ['definiteness', 'hostile_friendly', 'strategic_pe', 'deal_rationale', 'premium_percentage',
                  'stock_cash', 'financing_percent_of_deal_value', 'pro_forma_leverage', 'estimated_closing_date',
                  'go_shop', 'divestitures_required', 'termination_fee_for_acquirer', 'termination_fee_for_target',
                  'fair_valuation', 'cyclical_industry', 'other_country_regulatory_risk_one',
                  'other_country_regulatory_risk_two', 'acquirer_sh_vote_required',
                  'target_sh_vote_required_percentage', 'acquirer_becomes_target', 'potential_bidding_war',
                  'commodity_risk', 'estimated_market_share_acquirer', 'estimated_market_share_target',
                  'is_inversion_deal_or_tax_avoidance', 'activists_involved', 'is_form_complete', 'sec_requirement',
                  'sec_expected_clearance', 'sec_actual_clearance', 'hsr_requirement', 'hsr_expected_clearance',
                  'hsr_actual_clearance', 'mofcom_requirement', 'mofcom_expected_clearance', 'mofcom_actual_clearance',
                  'cifius_requirement', 'cifius_expected_clearance', 'cifius_actual_clearance', 'ec_requirement',
                  'ec_expected_clearance', 'ec_actual_clearance', 'accc_requirement', 'accc_expected_clearance',
                  'accc_actual_clearance', 'investment_canada_requirement', 'investment_canada_expected_clearance',
                  'investment_canada_actual_clearance', 'cade_requirement', 'cade_expected_clearance',
                  'cade_actual_clearance']
        labels = {
            "definiteness": "Definiteness",
            "hostile_friendly": "Hostile/Friendly",
            "strategic_pe": "Strategic/PE",
            "deal_rationale": "Deal Rationale",
            "premium_percentage": "Premium(%)",
            "stock_cash": "Stock/Cash",
            "financing_percent_of_deal_value": "Financing % of deal value",
            "pro_forma_leverage": "Pro-forma leverage (Debt/EBITDA)",
            "estimated_closing_date": "Estimated Closing Date",
            "go_shop": "Go Shop?",
            "divestitures_required": "Divestitures Required?",
            "termination_fee_for_acquirer": "Termination Fee for Acquirer($MM)",
            "termination_fee_for_target": "Termination Fee for Target($MM)",
            "fair_valuation": "Fair Valuation",
            "cyclical_industry": "Cyclical Industry",
            "sec_requirement": "SEC Requirement",
            "sec_expected_clearance": "SEC Expected Clearance",
            "sec_actual_clearance": "SEC Actual Clearance",
            "hsr_requirement": "HSR Requirement",
            "hsr_expected_clearance": "HSR Expected Clearance",
            "hsr_actual_clearance": "HSR Actual Clearance",
            "mofcom_requirement": "MOFCOM Requirement",
            "mofcom_expected_clearance": "MOFCOM Expected Clearance",
            "mofcom_actual_clearance": "MOFCOM Actual Clearance",
            "cifius_requirement": "CIFIUS Requirement",
            "cifius_expected_clearance": "CIFIUS Expected Clearance",
            "cifius_actual_clearance": "CIFIUS Actual Clearance",
            "ec_requirement": "EC Requirement",
            "ec_expected_clearance": "EC Expected Clearance",
            "ec_actual_clearance": "EC Actual Clearance",
            "accc_requirement": "ACCC Requirement",
            "accc_expected_clearance": "ACCC Expected Clearance",
            "accc_actual_clearance": "ACCC Actual Clearance",
            "investment_canada_requirement": "Investment/Competition Canada Requirement",
            "investment_canada_expected_clearance": "Investment/Competition Canada Expected Clearance",
            "investment_canada_actual_clearance": "Investment/Competition Canada Actual Clearance",
            "cade_requirement": "CADE Requirement",
            "cade_expected_clearance": "CADE Expected Clearance",
            "cade_actual_clearance": "CADE Actual Clearance",
            "other_country_regulatory_risk_one": "1. Other Country Regulatory Risk",
            "other_country_regulatory_risk_two": "2. Other Country Regulatory Risk",
            "acquirer_sh_vote_required": "Acquirer SH Vote Required",
            "target_sh_vote_required_percentage": "Target SH acceptance/vote required(%)",
            "acquirer_becomes_target": "Acquirer becomes Target",
            "potential_bidding_war": "Potential bidding war",
            "commodity_risk": "Commodity Risk",
            "estimated_market_share_acquirer": "Estimated Market Share of Acquirer(%)",
            "estimated_market_share_target": "Estimated Market Share of Target(%)",
            "is_inversion_deal_or_tax_avoidance": "Is Inversion Deal or Tax Avoidance",
            "activists_involved": "Activists Involved (separated by ,)",
            "is_form_complete": "Is form complete",
        }
        widgets = {
            'definiteness': forms.Select(attrs={'class': FORM_CONTROL_CLASS,
                                                'label_class': BADGE_SUCCESS_CLASS,
                                                'id': 'definiteness'}),
            "hostile_friendly": forms.Select(attrs={'class': FORM_CONTROL_CLASS,
                                                    'label_class': BADGE_SUCCESS_CLASS,
                                                    'id': 'hostile_friendly'}),
            "strategic_pe": forms.Select(attrs={'class': FORM_CONTROL_CLASS,
                                                'label_class': BADGE_SUCCESS_CLASS,
                                                'id': 'strategic_pe'}),
            "deal_rationale": forms.Select(attrs={'class': FORM_CONTROL_CLASS,
                                                  'label_class': BADGE_SUCCESS_CLASS,
                                                  'id': 'deal_rationale'}),
            "premium_percentage": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS,
                                                         'label_class': BADGE_SUCCESS_CLASS,
                                                         'id': 'premium'}),
            "stock_cash": forms.Select(attrs={'class': FORM_CONTROL_CLASS,
                                              'label_class': BADGE_SUCCESS_CLASS,
                                              'id': 'stock_cash'}),
            "financing_percent_of_deal_value": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS,
                                                                      'label_class': BADGE_SUCCESS_CLASS,
                                                                      'id': 'financing_percent_deal_value'}),
            "pro_forma_leverage": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS,
                                                         'label_class': BADGE_SUCCESS_CLASS,
                                                         'id': 'proforma_leverage'}),
            "estimated_closing_date": forms.DateInput(attrs={'type': 'date', 'class': DATE_PICKER_CLASS,
                                                             'label_class': BAGDE_INFO_CLASS,
                                                             'id': 'estimated_closing_date'}),
            "go_shop": forms.Select(attrs={'class': FORM_CONTROL_CLASS,
                                           'label_class': BADGE_SUCCESS_CLASS,
                                           'id': 'go_shop'}),
            "divestitures_required": forms.Select(attrs={'class': FORM_CONTROL_CLASS,
                                                         'label_class': BADGE_SUCCESS_CLASS,
                                                         'id': 'divestitures_required'}),
            "termination_fee_for_acquirer": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS,
                                                                   'label_class': BADGE_SUCCESS_CLASS,
                                                                   'id': 'termination_fee_acquirer'}),
            "termination_fee_for_target": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS,
                                                                 'label_class': BADGE_SUCCESS_CLASS,
                                                                 'id': 'termination_fee_target'}),
            "fair_valuation": forms.Select(attrs={'class': FORM_CONTROL_CLASS,
                                                  'label_class': BADGE_SUCCESS_CLASS,
                                                  'id': 'fair_valuation'}),
            "cyclical_industry": forms.Select(attrs={'class': FORM_CONTROL_CLASS,
                                                     'label_class': BADGE_SUCCESS_CLASS,
                                                     'id': 'cyclical_industry'}),
            "sec_requirement": forms.Select(attrs={'class': FORM_CONTROL_CLASS,
                                                   'label_class': BADGE_DARK_CLASS,
                                                   'id': 'sec_required'}),
            "sec_expected_clearance": forms.DateInput(attrs={'type': 'date', 'class': DATE_PICKER_CLASS,
                                                             'label_class': BAGDE_INFO_CLASS,
                                                             'id': 'expected_sec'}),
            "sec_actual_clearance": forms.DateInput(attrs={'type': 'date', 'class': DATE_PICKER_CLASS,
                                                           'label_class': BAGDE_INFO_CLASS,
                                                           'id': 'actual_sec', 'max': MAX_ACTUAL_DATE}),
            "hsr_requirement": forms.Select(attrs={'class': FORM_CONTROL_CLASS,
                                                   'label_class': BADGE_DARK_CLASS,
                                                   'id': 'hsr_required'}),
            "hsr_expected_clearance": forms.DateInput(attrs={'type': 'date', 'class': DATE_PICKER_CLASS,
                                                             'label_class': BAGDE_INFO_CLASS,
                                                             'id': 'expected_hsr'}),
            "hsr_actual_clearance": forms.DateInput(attrs={'type': 'date', 'class': DATE_PICKER_CLASS,
                                                           'label_class': BAGDE_INFO_CLASS,
                                                           'id': 'actual_hsr', 'max': MAX_ACTUAL_DATE}),
            "mofcom_requirement": forms.Select(attrs={'class': FORM_CONTROL_CLASS,
                                                      'label_class': BADGE_DARK_CLASS,
                                                      'id': 'mofcom_required'}),
            "mofcom_expected_clearance": forms.DateInput(attrs={'type': 'date', 'class': DATE_PICKER_CLASS,
                                                                'label_class': BAGDE_INFO_CLASS,
                                                                'id': 'expected_mofcom'}),
            "mofcom_actual_clearance": forms.DateInput(attrs={'type': 'date', 'class': DATE_PICKER_CLASS,
                                                              'label_class': BAGDE_INFO_CLASS,
                                                              'id': 'actual_mofcom', 'max': MAX_ACTUAL_DATE}),
            "cifius_requirement": forms.Select(attrs={'class': FORM_CONTROL_CLASS,
                                                      'label_class': BADGE_DARK_CLASS,
                                                      'id': 'cfius_required'}),
            "cifius_expected_clearance": forms.DateInput(attrs={'type': 'date', 'class': DATE_PICKER_CLASS,
                                                                'label_class': BAGDE_INFO_CLASS,
                                                                'id': 'expected_cfius'}),
            "cifius_actual_clearance": forms.DateInput(attrs={'type': 'date', 'class': DATE_PICKER_CLASS,
                                                              'label_class': BAGDE_INFO_CLASS,
                                                              'id': 'actual_cfius', 'max': MAX_ACTUAL_DATE}),
            "ec_requirement": forms.Select(attrs={'class': FORM_CONTROL_CLASS,
                                                  'label_class': BADGE_DARK_CLASS,
                                                  'id': 'ec_required'}),
            "ec_expected_clearance": forms.DateInput(attrs={'type': 'date', 'class': DATE_PICKER_CLASS,
                                                            'label_class': BAGDE_INFO_CLASS,
                                                            'id': 'expected_ec'}),
            "ec_actual_clearance": forms.DateInput(attrs={'type': 'date', 'class': DATE_PICKER_CLASS,
                                                          'label_class': BAGDE_INFO_CLASS,
                                                          'id': 'actual_ec', 'max': MAX_ACTUAL_DATE}),
            "accc_requirement": forms.Select(attrs={'class': FORM_CONTROL_CLASS,
                                                    'label_class': BADGE_DARK_CLASS,
                                                    'id': 'accc_required'}),
            "accc_expected_clearance": forms.DateInput(attrs={'type': 'date', 'class': DATE_PICKER_CLASS,
                                                              'label_class': BAGDE_INFO_CLASS,
                                                              'id': 'expected_accc'}),
            "accc_actual_clearance": forms.DateInput(attrs={'type': 'date', 'class': DATE_PICKER_CLASS,
                                                            'label_class': BAGDE_INFO_CLASS,
                                                            'id': 'actual_accc', 'max': MAX_ACTUAL_DATE}),
            "investment_canada_requirement": forms.Select(attrs={'class': FORM_CONTROL_CLASS,
                                                                 'label_class': BADGE_DARK_CLASS,
                                                                 'id': 'canada_required'}),
            "investment_canada_expected_clearance": forms.DateInput(attrs={'type': 'date', 'class': DATE_PICKER_CLASS,
                                                                           'label_class': BAGDE_INFO_CLASS,
                                                                           'id': 'expected_canada'}),
            "investment_canada_actual_clearance": forms.DateInput(attrs={'type': 'date', 'class': DATE_PICKER_CLASS,
                                                                         'label_class': BAGDE_INFO_CLASS,
                                                                         'id': 'actual_canada',
                                                                         'max': MAX_ACTUAL_DATE}),
            "cade_requirement": forms.Select(attrs={'class': FORM_CONTROL_CLASS,
                                                    'label_class': BADGE_DARK_CLASS,
                                                    'id': 'cade_required'}),
            "cade_expected_clearance": forms.DateInput(attrs={'type': 'date', 'class': DATE_PICKER_CLASS,
                                                              'label_class': BAGDE_INFO_CLASS,
                                                              'id': 'expected_cade'}),
            "cade_actual_clearance": forms.DateInput(attrs={'type': 'date', 'class': DATE_PICKER_CLASS,
                                                            'label_class': BAGDE_INFO_CLASS,
                                                            'id': 'actual_cade', 'max': MAX_ACTUAL_DATE}),
            "other_country_regulatory_risk_one": forms.Select(attrs={'class': FORM_CONTROL_CLASS,
                                                                     'label_class': BADGE_SUCCESS_CLASS,
                                                                     'id': 'other_country_one'}),
            "other_country_regulatory_risk_two": forms.Select(attrs={'class': FORM_CONTROL_CLASS,
                                                                     'label_class': BADGE_SUCCESS_CLASS,
                                                                     'id': 'other_country_two'}),
            "acquirer_sh_vote_required": forms.Select(attrs={'class': FORM_CONTROL_CLASS,
                                                             'label_class': BADGE_SUCCESS_CLASS,
                                                             'id': 'sh_vote_required'}),
            "target_sh_vote_required_percentage": forms.Select(attrs={'class': FORM_CONTROL_CLASS,
                                                                      'label_class': BADGE_SUCCESS_CLASS,
                                                                      'id': 'target_sh_vote_required'}),
            "acquirer_becomes_target": forms.Select(attrs={'class': FORM_CONTROL_CLASS,
                                                           'label_class': BADGE_SUCCESS_CLASS,
                                                           'id': 'acquirer_becomes_target'}),
            "potential_bidding_war": forms.Select(attrs={'class': FORM_CONTROL_CLASS,
                                                         'label_class': BADGE_SUCCESS_CLASS,
                                                         'id': 'potential_bidding_war'}),
            "commodity_risk": forms.Select(attrs={'class': FORM_CONTROL_CLASS,
                                                  'label_class': BADGE_SUCCESS_CLASS,
                                                  'id': 'commodity_risk'}),
            "estimated_market_share_acquirer": forms.Select(attrs={'class': FORM_CONTROL_CLASS,
                                                                   'label_class': BADGE_SUCCESS_CLASS,
                                                                   'id': 'estimated_market_share_acquirer'}),
            "estimated_market_share_target": forms.Select(attrs={'class': FORM_CONTROL_CLASS,
                                                                 'label_class': BADGE_SUCCESS_CLASS,
                                                                 'id': 'estimated_market_share_target'}),
            "is_inversion_deal_or_tax_avoidance": forms.Select(attrs={'class': FORM_CONTROL_CLASS,
                                                                      'label_class': BADGE_SUCCESS_CLASS,
                                                                      'id': 'is_inversion_deal'}),
            "activists_involved": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS,
                                                         'label_class': BADGE_SUCCESS_CLASS,
                                                         'id': 'activists_involved'}),
            "is_form_complete": forms.Select(attrs={'class': FORM_CONTROL_CLASS,
                                                    'label_class': BADGE_SUCCESS_CLASS,
                                                    'id': 'is_form_complete'}),
        }


class MaDealsActionIdDetailsForm(forms.ModelForm):
    """
    Form for MA Deals Risk Factors
    """
    class Meta:
        model = MaDealsActionIdDetails
        exclude = ('action_id',)
        labels = {
            "action_id": "Action ID",
            "target_name": "Target Name",
            "target_ticker": "Target Ticker",
            "target_industry": "Target Industry",
            "target_country": "Target Country",
            "acquirer_name": "Acquirer Name",
            "acquirer_ticker": "Acquirer Ticker",
            "acquirer_industry": "Acquirer Industry",
            "acquirer_country": "Acquirer Country",
            "deal_type": "Deal Type",
            "deal_status": "Deal Status",
            "nature_of_bid": "Nature of Bid",
            "transaction_type": "Transaction Type",
            "announced_date": "Announced Date",
            "mergers_agreement_date": "Mergers Agreement Date",
            "expected_completion_date": "Expected Completion Date",
            "drop_dead_date": "Drop Dead Date",
            "go_shop_period_end_date": "Go Shop Period End Date",
            "termination_date": "Termination Date",
            "net_debt": "Net Debt",
            "ebitda_total_tvm": "EBITDA Total Transaction Value Multiple",
            "ebit_total_tvm": "EBIT Total Transaction Value Multiple",
            "revenue_total_tvm": "Revenue Total Transaction Value Multiple",
            "total_assets_total_tvm": "Total Assets Total Transaction Value Multiple",
            "free_cashflow_total_tvm": "Free Cashflow Total Transaction Value Multiple",
            "ebitda_equity_tvm": "EBITDA Equity Transaction Value Multiple",
            "ebit_equity_tvm": "EBIT Equity Transaction Value Multiple",
            "revenue_equity_tvm": "Revenue Equity Transaction Value Multiple",
            "total_assets_equity_tvm": "Total Assets Equity Transaction Value Multiple",
            "free_cashflow_equity_tvm": "Free Cashflow Equity Transaction Value Multiple",
            "deal_currency": "Deal Currency",
            "payment_type": "Payment Type",
            "cash_terms": "Cash Terms",
            "stock_terms": "Stock Terms",
            "percent_owned": "Percent Owned",
            "percent_sought": "Percent Sought",
            "announced_total_value": "Announced Total Value",
            "announced_premium": "Announced Premium",
            "target_to_acquirer_termination_fees": "Target to Acquirer Termination Fees",
            "acquirer_to_target_termination_fess": "Acquirer to Target Termination Fees",
            "pending_approvals": "Pending Approvals",
            "expired_approvals": "Expired Approvals",
            "approved_approvals": "Approved Approvals",
            "extended_approvals": "Extended Approvals",
            "blocked_approvals": "Blocked Approvals",
            "early_termination_approvals": "Early Termination Approvals",
            "deal_description": "Deal Description",
        }
        widgets = {
            'action_id': forms.TextInput(attrs={'class': FORM_CONTROL_CLASS,
                                                'label_class': BADGE_SUCCESS_CLASS,
                                                'id': 'action_id'}),
            "target_name": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS,
                                                  'label_class': BADGE_SUCCESS_CLASS,
                                                  'id': 'target_name'}),
            "target_ticker": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS,
                                                    'label_class': BADGE_SUCCESS_CLASS,
                                                    'id': 'target_ticker'}),
            "target_industry": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS,
                                                      'label_class': BADGE_SUCCESS_CLASS,
                                                      'id': 'target_industry'}),
            "target_country": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS,
                                                     'label_class': BADGE_SUCCESS_CLASS,
                                                     'id': 'target_country'}),
            "acquirer_name": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS,
                                                    'label_class': BADGE_SUCCESS_CLASS,
                                                    'id': 'acquirer_name'}),
            "acquirer_ticker": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS,
                                                      'label_class': BADGE_SUCCESS_CLASS,
                                                      'id': 'acquirer_ticker'}),
            "acquirer_industry": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS,
                                                        'label_class': BADGE_SUCCESS_CLASS,
                                                        'id': 'acquirer_industry'}),
            "acquirer_country": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS,
                                                       'label_class': BADGE_SUCCESS_CLASS,
                                                       'id': 'acquirer_country'}),
            "deal_type": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS,
                                                'label_class': BADGE_SUCCESS_CLASS,
                                                'id': 'deal_type'}),
            "deal_status": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS,
                                                  'label_class': BADGE_SUCCESS_CLASS,
                                                  'id': 'deal_status'}),
            "nature_of_bid": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS,
                                                    'label_class': BADGE_SUCCESS_CLASS,
                                                    'id': 'nature_of_bid'}),
            "transaction_type": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS,
                                                       'label_class': BADGE_SUCCESS_CLASS,
                                                       'id': 'transaction_type'}),
            "announced_date": forms.DateInput(attrs={'type': 'date', 'class': DATE_PICKER_CLASS,
                                                     'label_class': BAGDE_INFO_CLASS,
                                                     'id': 'announced_date'}),
            "mergers_agreement_date": forms.DateInput(attrs={'type': 'date', 'class': DATE_PICKER_CLASS,
                                                             'label_class': BAGDE_INFO_CLASS,
                                                             'id': 'mergers_agreement_date'}),
            "expected_completion_date": forms.DateInput(attrs={'type': 'date', 'class': DATE_PICKER_CLASS,
                                                               'label_class': BAGDE_INFO_CLASS,
                                                               'id': 'expected_completion_date'}),
            "drop_dead_date": forms.DateInput(attrs={'type': 'date', 'class': DATE_PICKER_CLASS,
                                                     'label_class': BAGDE_INFO_CLASS,
                                                     'id': 'drop_dead_date'}),
            "go_shop_period_end_date": forms.DateInput(attrs={'type': 'date', 'class': DATE_PICKER_CLASS,
                                                              'label_class': BAGDE_INFO_CLASS,
                                                              'id': 'go_shop_period_end_date'}),
            "termination_date": forms.DateInput(attrs={'type': 'date', 'class': DATE_PICKER_CLASS,
                                                       'label_class': BAGDE_INFO_CLASS,
                                                       'id': 'termination_date'}),
            "net_debt": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS, 'label_class': BADGE_SUCCESS_CLASS,
                                               'id': 'net_debt'}),
            "ebitda_total_tvm": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS, 'label_class': BADGE_SUCCESS_CLASS,
                                                       'id': 'ebitda_total_tvm'}),
            "ebit_total_tvm": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS, 'label_class': BADGE_SUCCESS_CLASS,
                                                     'id': 'ebit_total_tvm'}),
            "revenue_total_tvm": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS, 'label_class': BADGE_SUCCESS_CLASS,
                                                        'id': 'mofcom_reqrevenue_total_tvmuired'}),
            "total_assets_total_tvm": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS,
                                                             'label_class': BADGE_SUCCESS_CLASS,
                                                             'id': 'total_assets_total_tvm'}),
            "free_cashflow_total_tvm": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS,
                                                              'label_class': BADGE_SUCCESS_CLASS,
                                                              'id': 'free_cashflow_total_tvm'}),
            "ebitda_equity_tvm": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS, 'label_class': BADGE_SUCCESS_CLASS,
                                                        'id': 'ebitda_equity_tvm'}),
            "ebit_equity_tvm": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS, 'label_class': BADGE_SUCCESS_CLASS,
                                                      'id': 'ebit_equity_tvm'}),
            "revenue_equity_tvm": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS,
                                                         'label_class': BADGE_SUCCESS_CLASS,
                                                         'id': 'revenue_equity_tvm'}),
            "total_assets_equity_tvm": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS,
                                                              'label_class': BADGE_SUCCESS_CLASS,
                                                              'id': 'total_assets_equity_tvm'}),
            "free_cashflow_equity_tvm": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS,
                                                               'label_class': BADGE_SUCCESS_CLASS,
                                                               'id': 'free_cashflow_equity_tvm'}),
            "deal_currency": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS, 'label_class': BADGE_SUCCESS_CLASS,
                                                    'id': 'deal_currency'}),
            "payment_type": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS, 'label_class': BADGE_SUCCESS_CLASS,
                                                   'id': 'payment_type'}),
            "cash_terms": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS,
                                                 'label_class': BADGE_SUCCESS_CLASS,
                                                 'id': 'cash_terms'}),
            "stock_terms": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS,
                                                  'label_class': BADGE_SUCCESS_CLASS,
                                                  'id': 'stock_terms'}),
            "percent_owned": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS,
                                                    'label_class': BADGE_SUCCESS_CLASS,
                                                    'id': 'percent_owned'}),
            "percent_sought": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS,
                                                     'label_class': BADGE_SUCCESS_CLASS,
                                                     'id': 'percent_sought'}),
            "announced_total_value": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS,
                                                            'label_class': BADGE_SUCCESS_CLASS,
                                                            'id': 'announced_total_value'}),
            "announced_premium": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS,
                                                        'label_class': BADGE_SUCCESS_CLASS,
                                                        'id': 'announced_premium'}),
            "target_to_acquirer_termination_fees": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS,
                                                                          'label_class': BADGE_SUCCESS_CLASS,
                                                                          'id': 'target_to_acquirer_termination_fees'}),
            "acquirer_to_target_termination_fess": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS,
                                                                          'label_class': BADGE_SUCCESS_CLASS,
                                                                          'id': 'acquirer_to_target_termination_fess'}),
            "pending_approvals": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS, 'label_class': BADGE_SUCCESS_CLASS,
                                                        'id': 'pending_approvals'}),
            "expired_approvals": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS, 'label_class': BADGE_SUCCESS_CLASS,
                                                        'id': 'expired_approvals'}),
            "approved_approvals": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS,
                                                         'label_class': BADGE_SUCCESS_CLASS,
                                                         'id': 'approved_approvals'}),
            "extended_approvals": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS,
                                                         'label_class': BADGE_SUCCESS_CLASS,
                                                         'id': 'extended_approvals'}),
            "blocked_approvals": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS,
                                                        'label_class': BADGE_SUCCESS_CLASS,
                                                        'id': 'blocked_approvals'}),
            "early_termination_approvals": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS,
                                                                  'label_class': BADGE_SUCCESS_CLASS,
                                                                  'id': 'early_termination_approvals'}),
            "deal_description": forms.Textarea(attrs={'class': FORM_CONTROL_CLASS, 'label_class': BADGE_SUCCESS_CLASS,
                                                      'id': 'deal_description', 'rows': 8, 'cols': 40}),
        }
