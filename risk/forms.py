from datetime import date

from django import forms

from risk.models import ESS_Idea, MA_Deals_Risk_Factors

BADGE_SUCCESS_CLASS = 'badge badge-default badge-success'
BAGDE_INFO_CLASS = 'badge badge-default badge-info'
BADGE_DARK_CLASS = 'badge badge-default badge-dark'
DATE_PICKER_CLASS = 'form-control'
CUSTOM_SELECT_CLASS = 'custom-select form-control input-lg'
FORM_CONTROL_CLASS = 'form-control input-lg'
MAX_ACTUAL_DATE = date.today().strftime('%Y-%m-%d')


class MaDealsRiskFactorsForm(forms.ModelForm):
    """
    Form for MA Deals Risk Factors
    """
    class Meta:
        model = MA_Deals_Risk_Factors
        exclude = ('deal',)
        labels = {
            "definiteness": "Definiteness",
            "hostile_friendly": "Hostile/Friendly",
            "strategic_pe": "Strategic/PE",
            "deal_rationale": "Deal Rationale",
            "premium_percentage": "Premium(%)",
            "stock_cash": "Stock/Cash",
            "financing_percent_of_deal_value": "Financing % of deal value",
            "pro_forma_leverage": "Pro-forma leverage (Debt/EBITDA)",
            "estimated_closing_date": "Estimated Closing Date",
            "go_shop": "Go Shop?",
            "divestitures_required": "Divestitures Required?",
            "termination_fee_for_acquirer": "Termination Fee for Acquirer($MM)",
            "termination_fee_for_target": "Termination Fee for Target($MM)",
            "fair_valuation": "Fair Valuation",
            "cyclical_industry": "Cyclical Industry",
            "sec_requirement": "SEC Requirement",
            "sec_expected_clearance": "SEC Expected Clearance",
            "sec_actual_clearance": "SEC Actual Clearance",
            "hsr_requirement": "HSR Requirement",
            "hsr_expected_clearance": "HSR Expected Clearance",
            "hsr_actual_clearance": "HSR Actual Clearance",
            "mofcom_requirement": "MOFCOM Requirement",
            "mofcom_expected_clearance": "MOFCOM Expected Clearance",
            "mofcom_actual_clearance": "MOFCOM Actual Clearance",
            "cifius_requirement": "CIFIUS Requirement",
            "cifius_expected_clearance": "CIFIUS Expected Clearance",
            "cifius_actual_clearance": "CIFIUS Actual Clearance",
            "ec_requirement": "EC Requirement",
            "ec_expected_clearance": "EC Expected Clearance",
            "ec_actual_clearance": "EC Actual Clearance",
            "accc_requirement": "ACCC Requirement",
            "accc_expected_clearance": "ACCC Expected Clearance",
            "accc_actual_clearance": "ACCC Actual Clearance",
            "investment_canada_requirement": "Investment/Competition Canada Requirement",
            "investment_canada_expected_clearance": "Investment/Competition Canada Expected Clearance",
            "investment_canada_actual_clearance": "Investment/Competition Canada Actual Clearance",
            "cade_requirement": "CADE Requirement",
            "cade_expected_clearance": "CADE Expected Clearance",
            "cade_actual_clearance": "CADE Actual Clearance",
            "other_country_regulatory_risk_one": "1. Other Country Regulatory Risk",
            "other_country_regulatory_risk_two": "2. Other Country Regulatory Risk",
            "acquirer_sh_vote_required": "Acquirer SH Vote Required",
            "target_sh_vote_required_percentage": "Target SH acceptance/vote required(%)",
            "acquirer_becomes_target": "Acquirer becomes Target",
            "potential_bidding_war": "Potential bidding war",
            "commodity_risk": "Commodity Risk",
            "estimated_market_share_acquirer": "Estimated Market Share of Acquirer(%)",
            "estimated_market_share_target": "Estimated Market Share of Target(%)",
            "is_inversion_deal_or_tax_avoidance": "Is Inversion Deal or Tax Avoidance",
            "activists_involved": "Activists Involved (separated by ,)",
            "is_form_complete": "Is form complete",
        }
        widgets = {
            'definiteness': forms.Select(attrs={'class': CUSTOM_SELECT_CLASS,
                                                'label_class': BADGE_SUCCESS_CLASS,
                                                'id': 'definiteness'}),
            "hostile_friendly": forms.Select(attrs={'class': CUSTOM_SELECT_CLASS,
                                                    'label_class': BADGE_SUCCESS_CLASS,
                                                    'id': 'hostile_friendly'}),
            "strategic_pe": forms.Select(attrs={'class': CUSTOM_SELECT_CLASS,
                                                'label_class': BADGE_SUCCESS_CLASS,
                                                'id': 'strategic_pe'}),
            "deal_rationale": forms.Select(attrs={'class': CUSTOM_SELECT_CLASS,
                                                  'label_class': BADGE_SUCCESS_CLASS,
                                                  'id': 'deal_rationale'}),
            "premium_percentage": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS,
                                                         'label_class': BADGE_SUCCESS_CLASS,
                                                         'id': 'premium'}),
            "stock_cash": forms.Select(attrs={'class': CUSTOM_SELECT_CLASS,
                                              'label_class': BADGE_SUCCESS_CLASS,
                                              'id': 'stock_cash'}),
            "financing_percent_of_deal_value": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS,
                                                                      'label_class': BADGE_SUCCESS_CLASS,
                                                                      'id': 'financing_percent_deal_value'}),
            "pro_forma_leverage": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS,
                                                         'label_class': BADGE_SUCCESS_CLASS,
                                                         'id': 'proforma_leverage'}),
            "estimated_closing_date": forms.TextInput(attrs={'type': 'date', 'class':DATE_PICKER_CLASS,
                                                             'label_class': BADGE_SUCCESS_CLASS,
                                                             'id': 'estimated_closing_date'}),
            "go_shop": forms.Select(attrs={'class': CUSTOM_SELECT_CLASS,
                                           'label_class': BADGE_SUCCESS_CLASS,
                                           'id': 'go_shop'}),
            "divestitures_required": forms.Select(attrs={'class': CUSTOM_SELECT_CLASS,
                                                         'label_class': BADGE_SUCCESS_CLASS,
                                                         'id': 'divestitures_required'}),
            "termination_fee_for_acquirer": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS,
                                                                   'label_class': BADGE_SUCCESS_CLASS,
                                                                   'id': 'termination_fee_acquirer'}),
            "termination_fee_for_target": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS,
                                                                 'label_class': BADGE_SUCCESS_CLASS,
                                                                 'id': 'termination_fee_target'}),
            "fair_valuation": forms.Select(attrs={'class': CUSTOM_SELECT_CLASS,
                                                  'label_class': BADGE_SUCCESS_CLASS,
                                                  'id': 'fair_valuation'}),
            "cyclical_industry": forms.Select(attrs={'class': CUSTOM_SELECT_CLASS,
                                                     'label_class': BADGE_SUCCESS_CLASS,
                                                     'id': 'cyclical_industry'}),
            "sec_requirement": forms.Select(attrs={'class': CUSTOM_SELECT_CLASS,
                                                   'label_class': BADGE_DARK_CLASS,
                                                   'id': 'sec_required'}),
            "sec_expected_clearance": forms.DateInput(attrs={'type': 'date', 'class': DATE_PICKER_CLASS,
                                                             'label_class': BAGDE_INFO_CLASS,
                                                             'id': 'expected_sec'}),
            "sec_actual_clearance": forms.DateInput(attrs={'type': 'date', 'class': DATE_PICKER_CLASS,
                                                           'label_class': BAGDE_INFO_CLASS,
                                                           'id': 'actual_sec', 'max': MAX_ACTUAL_DATE}),
            "hsr_requirement": forms.Select(attrs={'class': CUSTOM_SELECT_CLASS,
                                                   'label_class': BADGE_DARK_CLASS,
                                                   'id': 'hsr_required'}),
            "hsr_expected_clearance": forms.DateInput(attrs={'type': 'date', 'class': DATE_PICKER_CLASS,
                                                             'label_class': BAGDE_INFO_CLASS,
                                                             'id': 'expected_hsr'}),
            "hsr_actual_clearance": forms.DateInput(attrs={'type': 'date', 'class': DATE_PICKER_CLASS,
                                                           'label_class': BAGDE_INFO_CLASS,
                                                           'id': 'actual_hsr', 'max': MAX_ACTUAL_DATE}),
            "mofcom_requirement": forms.Select(attrs={'class': CUSTOM_SELECT_CLASS,
                                                      'label_class': BADGE_DARK_CLASS,
                                                      'id': 'mofcom_required'}),
            "mofcom_expected_clearance": forms.DateInput(attrs={'type': 'date', 'class': DATE_PICKER_CLASS,
                                                                'label_class': BAGDE_INFO_CLASS,
                                                                'id': 'expected_mofcom'}),
            "mofcom_actual_clearance": forms.DateInput(attrs={'type': 'date', 'class': DATE_PICKER_CLASS,
                                                              'label_class': BAGDE_INFO_CLASS,
                                                              'id': 'actual_mofcom', 'max': MAX_ACTUAL_DATE}),
            "cifius_requirement": forms.Select(attrs={'class': CUSTOM_SELECT_CLASS,
                                                      'label_class': BADGE_DARK_CLASS,
                                                      'id': 'cfius_required'}),
            "cifius_expected_clearance": forms.DateInput(attrs={'type': 'date', 'class': DATE_PICKER_CLASS,
                                                                'label_class': BAGDE_INFO_CLASS,
                                                                'id': 'expected_cfius'}),
            "cifius_actual_clearance": forms.DateInput(attrs={'type': 'date', 'class': DATE_PICKER_CLASS,
                                                              'label_class': BAGDE_INFO_CLASS,
                                                              'id': 'actual_cfius', 'max': MAX_ACTUAL_DATE}),
            "ec_requirement": forms.Select(attrs={'class': CUSTOM_SELECT_CLASS,
                                                  'label_class': BADGE_DARK_CLASS,
                                                  'id': 'ec_required'}),
            "ec_expected_clearance": forms.DateInput(attrs={'type': 'date', 'class': DATE_PICKER_CLASS,
                                                            'label_class': BAGDE_INFO_CLASS,
                                                            'id': 'expected_ec'}),
            "ec_actual_clearance": forms.DateInput(attrs={'type': 'date', 'class': DATE_PICKER_CLASS,
                                                          'label_class': BAGDE_INFO_CLASS,
                                                          'id': 'actual_ec', 'max': MAX_ACTUAL_DATE}),
            "accc_requirement": forms.Select(attrs={'class': CUSTOM_SELECT_CLASS,
                                                    'label_class': BADGE_DARK_CLASS,
                                                    'id': 'accc_required'}),
            "accc_expected_clearance": forms.DateInput(attrs={'type': 'date', 'class': DATE_PICKER_CLASS,
                                                              'label_class': BAGDE_INFO_CLASS,
                                                              'id': 'expected_accc'}),
            "accc_actual_clearance": forms.DateInput(attrs={'type': 'date', 'class': DATE_PICKER_CLASS,
                                                            'label_class': BAGDE_INFO_CLASS,
                                                            'id': 'actual_accc', 'max': MAX_ACTUAL_DATE}),
            "investment_canada_requirement": forms.Select(attrs={'class': CUSTOM_SELECT_CLASS,
                                                                 'label_class': BADGE_DARK_CLASS,
                                                                 'id': 'canada_required'}),
            "investment_canada_expected_clearance": forms.DateInput(attrs={'type': 'date', 'class': DATE_PICKER_CLASS,
                                                                           'label_class': BAGDE_INFO_CLASS,
                                                                           'id': 'expected_canada'}),
            "investment_canada_actual_clearance": forms.DateInput(attrs={'type': 'date', 'class': DATE_PICKER_CLASS,
                                                                         'label_class': BAGDE_INFO_CLASS,
                                                                         'id': 'actual_canada', 'max': MAX_ACTUAL_DATE}),
            "cade_requirement": forms.Select(attrs={'class': CUSTOM_SELECT_CLASS,
                                                    'label_class': BADGE_DARK_CLASS,
                                                    'id': 'cade_required'}),
            "cade_expected_clearance": forms.DateInput(attrs={'type': 'date', 'class': DATE_PICKER_CLASS,
                                                              'label_class': BAGDE_INFO_CLASS,
                                                              'id': 'expected_cade'}),
            "cade_actual_clearance": forms.DateInput(attrs={'type': 'date', 'class': DATE_PICKER_CLASS,
                                                            'label_class': BAGDE_INFO_CLASS,
                                                            'id': 'actual_cade', 'max': MAX_ACTUAL_DATE}),
            "other_country_regulatory_risk_one": forms.Select(attrs={'class': CUSTOM_SELECT_CLASS,
                                                                     'label_class': BADGE_SUCCESS_CLASS,
                                                                     'id': 'other_country_one'}),
            "other_country_regulatory_risk_two": forms.Select(attrs={'class': CUSTOM_SELECT_CLASS,
                                                                     'label_class': BADGE_SUCCESS_CLASS,
                                                                     'id': 'other_country_two'}),
            "acquirer_sh_vote_required": forms.Select(attrs={'class': CUSTOM_SELECT_CLASS,
                                                             'label_class': BADGE_SUCCESS_CLASS,
                                                             'id': 'sh_vote_required'}),
            "target_sh_vote_required_percentage": forms.Select(attrs={'class': CUSTOM_SELECT_CLASS,
                                                                      'label_class': BADGE_SUCCESS_CLASS,
                                                                      'id': 'target_sh_vote_required'}),
            "acquirer_becomes_target": forms.Select(attrs={'class': CUSTOM_SELECT_CLASS,
                                                           'label_class': BADGE_SUCCESS_CLASS,
                                                           'id': 'acquirer_becomes_target'}),
            "potential_bidding_war": forms.Select(attrs={'class': CUSTOM_SELECT_CLASS,
                                                         'label_class': BADGE_SUCCESS_CLASS,
                                                         'id': 'potential_bidding_war'}),
            "commodity_risk": forms.Select(attrs={'class': CUSTOM_SELECT_CLASS,
                                                  'label_class': BADGE_SUCCESS_CLASS,
                                                  'id': 'commodity_risk'}),
            "estimated_market_share_acquirer": forms.Select(attrs={'class': CUSTOM_SELECT_CLASS,
                                                                   'label_class': BADGE_SUCCESS_CLASS,
                                                                   'id': 'estimated_market_share_acquirer'}),
            "estimated_market_share_target": forms.Select(attrs={'class': CUSTOM_SELECT_CLASS,
                                                                 'label_class': BADGE_SUCCESS_CLASS,
                                                                 'id': 'estimated_market_share_target'}),
            "is_inversion_deal_or_tax_avoidance": forms.Select(attrs={'class': CUSTOM_SELECT_CLASS,
                                                                      'label_class': BADGE_SUCCESS_CLASS,
                                                                      'id': 'is_inversion_deal'}),
            "activists_involved": forms.TextInput(attrs={'class': FORM_CONTROL_CLASS,
                                                         'label_class': BADGE_SUCCESS_CLASS,
                                                         'id': 'activists_involved'}),
            "is_form_complete": forms.Select(attrs={'class': CUSTOM_SELECT_CLASS,
                                                    'label_class': BADGE_SUCCESS_CLASS,
                                                    'id': 'is_form_complete'}),
        }
